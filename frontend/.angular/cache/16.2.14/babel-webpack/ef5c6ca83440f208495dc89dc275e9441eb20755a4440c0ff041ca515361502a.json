{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./image.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"form\"];\nfunction ImageSelectorComponent_ng_container_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵlistener(\"click\", function ImageSelectorComponent_ng_container_7_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const image_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.selectImage(image_r4));\n    });\n    i0.ɵɵelement(1, \"img\", 18);\n    i0.ɵɵelementStart(2, \"span\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const image_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", image_r4.url, i0.ɵɵsanitizeUrl)(\"title\", image_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(image_r4.title);\n  }\n}\nfunction ImageSelectorComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵtemplate(2, ImageSelectorComponent_ng_container_7_div_2_Template, 4, 3, \"div\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const images_r2 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", images_r2);\n  }\n}\nexport class ImageSelectorComponent {\n  constructor(imageService) {\n    this.imageService = imageService;\n    this.fileName = '';\n    this.title = '';\n  }\n  ngOnInit() {\n    this.getImages();\n  }\n  /* Methods */\n  onFileUploadChange(event) {\n    const element = event.currentTarget;\n    this.file = element.files?.[0];\n  }\n  uploadImage() {\n    if (this.file && this.fileName !== '' && this.title !== '') {\n      this.imageService.uploadImage(this.file, this.fileName, this.title).subscribe({\n        next: res => {\n          this.imageUploadForm?.resetForm();\n          this.getImages();\n        }\n      });\n    }\n  }\n  selectImage(image) {\n    this.imageService.selectImage(image);\n  }\n  getImages() {\n    this.images$ = this.imageService.getAllImages();\n  }\n  static #_ = this.ɵfac = function ImageSelectorComponent_Factory(t) {\n    return new (t || ImageSelectorComponent)(i0.ɵɵdirectiveInject(i1.ImageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImageSelectorComponent,\n    selectors: [[\"app-image-selector\"]],\n    viewQuery: function ImageSelectorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.imageUploadForm = _t.first);\n      }\n    },\n    decls: 23,\n    vars: 5,\n    consts: [[1, \"card\", \"mt-5\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [1, \"d-flex\", \"flex-md-rowvflex-sm-column\", \"flex-wrap\"], [1, \"col-8\", \"p-4\", 2, \"overflow-y\", \"scroll\"], [4, \"ngIf\"], [1, \"col-4\", \"p-4\", \"bg-light\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"mt-3\"], [\"type\", \"file\", 1, \"form-control\", 3, \"change\"], [\"type\", \"text\", \"placeholder\", \"File Name\", \"name\", \"filename\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Title\", \"name\", \"title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\"], [1, \"d-flex\", \"flex-wrap\"], [\"style\", \"min-width: 100px; justify-content: center; cursor: pointer\", \"class\", \"me-1 bg-white d-flex align-items-center flex-column border p-3\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"me-1\", \"bg-white\", \"d-flex\", \"align-items-center\", \"flex-column\", \"border\", \"p-3\", 2, \"min-width\", \"100px\", \"justify-content\", \"center\", \"cursor\", \"pointer\", 3, \"click\"], [2, \"height\", \"100px\", 3, \"src\", \"title\"], [1, \"mt-1\"]],\n    template: function ImageSelectorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n        i0.ɵɵtext(3, \"Images\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5);\n        i0.ɵɵtemplate(7, ImageSelectorComponent_ng_container_7_Template, 3, 1, \"ng-container\", 6);\n        i0.ɵɵpipe(8, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"h5\");\n        i0.ɵɵtext(11, \"Upload Image\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"form\", 8, 9);\n        i0.ɵɵlistener(\"ngSubmit\", function ImageSelectorComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.uploadImage();\n        });\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"input\", 11);\n        i0.ɵɵlistener(\"change\", function ImageSelectorComponent_Template_input_change_15_listener($event) {\n          return ctx.onFileUploadChange($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 10)(17, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function ImageSelectorComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.fileName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 10)(19, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function ImageSelectorComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 10)(21, \"button\", 14);\n        i0.ɵɵtext(22, \"Upload\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(8, 3, ctx.images$));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.fileName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.title);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","ImageSelectorComponent_ng_container_7_div_2_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","_r6","image_r4","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","selectImage","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","url","ɵɵsanitizeUrl","title","ɵɵtextInterpolate","ɵɵelementContainerStart","ɵɵtemplate","ImageSelectorComponent_ng_container_7_div_2_Template","ɵɵelementContainerEnd","images_r2","ImageSelectorComponent","constructor","imageService","fileName","ngOnInit","getImages","onFileUploadChange","event","element","currentTarget","file","files","uploadImage","subscribe","next","res","imageUploadForm","resetForm","image","images$","getAllImages","_","ɵɵdirectiveInject","i1","ImageService","_2","selectors","viewQuery","ImageSelectorComponent_Query","rf","ctx","ImageSelectorComponent_ng_container_7_Template","ImageSelectorComponent_Template_form_ngSubmit_12_listener","ImageSelectorComponent_Template_input_change_15_listener","$event","ImageSelectorComponent_Template_input_ngModelChange_17_listener","ImageSelectorComponent_Template_input_ngModelChange_19_listener","ɵɵpipeBind1"],"sources":["/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/shared/components/image-selector/image-selector.component.ts","/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/shared/components/image-selector/image-selector.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ImageService } from './image.service';\nimport { Observable } from 'rxjs';\nimport { BlogImage } from '../../models/blog-image-model';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-image-selector',\n  templateUrl: './image-selector.component.html',\n  styleUrls: ['./image-selector.component.css'],\n})\nexport class ImageSelectorComponent implements OnInit {\n  private file?: File;\n  fileName: string = '';\n  title: string = '';\n  images$?: Observable<BlogImage[]>;\n\n  @ViewChild('form', { static: false }) imageUploadForm?: NgForm;\n\n  constructor(private imageService: ImageService) {}\n  ngOnInit(): void {\n    this.getImages();\n  }\n\n  /* Methods */\n  onFileUploadChange(event: Event): void {\n    const element = event.currentTarget as HTMLInputElement;\n    this.file = element.files?.[0];\n  }\n  uploadImage(): void {\n    if (this.file && this.fileName !== '' && this.title !== '') {\n      this.imageService\n        .uploadImage(this.file, this.fileName, this.title)\n        .subscribe({\n          next: (res) => {\n            this.imageUploadForm?.resetForm();\n            this.getImages();\n          },\n        });\n    }\n  }\n\n  selectImage(image: BlogImage): void {\n    this.imageService.selectImage(image)\n  }\n\n  private getImages() {\n    this.images$ = this.imageService.getAllImages();\n  }\n}\n","<div class=\"card mt-5\">\n  <div class=\"card-header\">\n    <h3 class=\"card-title\">Images</h3>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"d-flex flex-md-rowvflex-sm-column flex-wrap\">\n      <div class=\"col-8 p-4\" style=\"overflow-y: scroll\">\n        <ng-container *ngIf=\"images$ | async as images\">\n          <div class=\"d-flex flex-wrap\">\n            <div\n              *ngFor=\"let image of images\"\n              style=\"min-width: 100px; justify-content: center; cursor: pointer\"\n              class=\"me-1 bg-white d-flex align-items-center flex-column border p-3\"\n              (click)=\"selectImage(image)\"\n            >\n              <img\n                [src]=\"image.url\"\n                [title]=\"image.title\"\n                style=\"height: 100px\"\n              />\n              <span class=\"mt-1\">{{ image.title }}</span>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"col-4 p-4 bg-light\">\n        <h5>Upload Image</h5>\n\n        <form #form=\"ngForm\" (ngSubmit)=\"uploadImage()\">\n          <div class=\"mt-3\">\n            <input\n              class=\"form-control\"\n              type=\"file\"\n              (change)=\"onFileUploadChange($event)\"\n            />\n          </div>\n          <div class=\"mt-3\">\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              placeholder=\"File Name\"\n              name=\"filename\"\n              [(ngModel)]=\"fileName\"\n            />\n          </div>\n          <div class=\"mt-3\">\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              placeholder=\"Title\"\n              name=\"title\"\n              [(ngModel)]=\"title\"\n            />\n          </div>\n          <div class=\"mt-3\">\n            <button class=\"btn btn-dark\" type=\"submit\">Upload</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}