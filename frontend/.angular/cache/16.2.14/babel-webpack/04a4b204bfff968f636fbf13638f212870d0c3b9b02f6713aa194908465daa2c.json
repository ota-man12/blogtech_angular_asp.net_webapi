{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ImageService {\n  constructor(http) {\n    this.http = http;\n    this.selectedImage = new BehaviorSubject({\n      id: '',\n      fileExtension: '',\n      fileName: '',\n      title\n    });\n  }\n  /* Methods */\n  getAllImages() {\n    return this.http.get(`${environment.apiBaseUrl}/api/Images`);\n  }\n  uploadImage(file, fileName, tile) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('fileName', fileName);\n    formData.append('title', tile);\n    return this.http.post(`${environment.apiBaseUrl}/api/Images`, formData);\n  }\n  selectImage(image) {}\n  static #_ = this.ɵfac = function ImageService_Factory(t) {\n    return new (t || ImageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ImageService,\n    factory: ImageService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","environment","ImageService","constructor","http","selectedImage","id","fileExtension","fileName","title","getAllImages","get","apiBaseUrl","uploadImage","file","tile","formData","FormData","append","post","selectImage","image","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/shared/components/image-selector/image.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { BlogImage } from '../../models/blog-image-model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageService {\n  selectedImage: BehaviorSubject<BlogImage> = new BehaviorSubject<BlogImage>({\n    id:'',\n    fileExtension:'',\n    fileName:'',\n    title\n  })\n\n  constructor(private http: HttpClient) {}\n\n  /* Methods */\n  getAllImages(): Observable<BlogImage[]> {\n    return this.http.get<BlogImage[]>(`${environment.apiBaseUrl}/api/Images`);\n  }\n\n  uploadImage(\n    file: File,\n    fileName: string,\n    tile: string\n  ): Observable<BlogImage> {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('fileName', fileName);\n    formData.append('title', tile);\n\n    return this.http.post<BlogImage>(\n      `${environment.apiBaseUrl}/api/Images`,\n      formData\n    );\n  }\n\n  selectImage(image:BlogImage):void{}\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;AAElD,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,YAAY;EAQvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPxB,KAAAC,aAAa,GAA+B,IAAIL,eAAe,CAAY;MACzEM,EAAE,EAAC,EAAE;MACLC,aAAa,EAAC,EAAE;MAChBC,QAAQ,EAAC,EAAE;MACXC;KACD,CAAC;EAEqC;EAEvC;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAc,GAAGV,WAAW,CAACW,UAAU,aAAa,CAAC;EAC3E;EAEAC,WAAWA,CACTC,IAAU,EACVN,QAAgB,EAChBO,IAAY;IAEZ,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;IAC7BE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEV,QAAQ,CAAC;IACrCQ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,IAAI,CAAC;IAE9B,OAAO,IAAI,CAACX,IAAI,CAACe,IAAI,CACnB,GAAGlB,WAAW,CAACW,UAAU,aAAa,EACtCI,QAAQ,CACT;EACH;EAEAI,WAAWA,CAACC,KAAe,GAAO;EAAC,QAAAC,CAAA,G;qBA/BxBpB,YAAY,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZzB,YAAY;IAAA0B,OAAA,EAAZ1B,YAAY,CAAA2B,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}