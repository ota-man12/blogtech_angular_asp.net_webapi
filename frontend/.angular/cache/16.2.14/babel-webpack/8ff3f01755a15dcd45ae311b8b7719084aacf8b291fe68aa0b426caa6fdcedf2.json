{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(http) {\n    this.http = http;\n  }\n  /* Methods */\n  getAllCategories() {\n    return this.http.get(`${environment.apiBaseUrl}/api/Categories`);\n  }\n  getCategoryById(id) {\n    return this.http.get(`${environment.apiBaseUrl}/api/Categories/${id}`);\n  }\n  addCategory(model) {\n    return this.http.post(`${environment.apiBaseUrl}/api/Categories`, model);\n  }\n  editCategory(id, editCategoryRequest) {\n    return this.http.put(`${environment.apiBaseUrl}/api/Categories/${id}`, editCategoryRequest, {\n      headers: {\n        'Authorization': ''\n      }\n    });\n  }\n  deleteCategory(id) {\n    return this.http.delete(`${environment.apiBaseUrl}/api/Categories/${id}`);\n  }\n  static #_ = this.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","CategoryService","constructor","http","getAllCategories","get","apiBaseUrl","getCategoryById","id","addCategory","model","post","editCategory","editCategoryRequest","put","headers","deleteCategory","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/features/category/services/category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AddCategoryRequest } from '../models/add-category-request.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Category } from '../models/category.model';\nimport { environment } from 'src/environments/environment';\nimport { EditCategoryRequest } from '../models/edit-category-request.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  constructor(private http: HttpClient) {}\n\n  /* Methods */\n  getAllCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(\n      `${environment.apiBaseUrl}/api/Categories`\n    );\n  }\n\n  getCategoryById(id: string): Observable<Category> {\n    return this.http.get<Category>(\n      `${environment.apiBaseUrl}/api/Categories/${id}`\n    );\n  }\n\n  addCategory(model: AddCategoryRequest): Observable<void> {\n    return this.http.post<void>(\n      `${environment.apiBaseUrl}/api/Categories`,\n      model\n    );\n  }\n\n  editCategory(\n    id: string,\n    editCategoryRequest: EditCategoryRequest\n  ): Observable<Category> {\n    return this.http.put<Category>(\n      `${environment.apiBaseUrl}/api/Categories/${id}`,\n      editCategoryRequest,{\n        headers:{\n          'Authorization':''\n        }\n      }\n    );\n  }\n\n  deleteCategory(id: string): Observable<Category> {\n    return this.http.delete<Category>(\n      `${environment.apiBaseUrl}/api/Categories/${id}`\n    );\n  }\n}\n"],"mappings":"AAKA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvC;EACAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAClB,GAAGL,WAAW,CAACM,UAAU,iBAAiB,CAC3C;EACH;EAEAC,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAClB,GAAGL,WAAW,CAACM,UAAU,mBAAmBE,EAAE,EAAE,CACjD;EACH;EAEAC,WAAWA,CAACC,KAAyB;IACnC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CACnB,GAAGX,WAAW,CAACM,UAAU,iBAAiB,EAC1CI,KAAK,CACN;EACH;EAEAE,YAAYA,CACVJ,EAAU,EACVK,mBAAwC;IAExC,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAClB,GAAGd,WAAW,CAACM,UAAU,mBAAmBE,EAAE,EAAE,EAChDK,mBAAmB,EAAC;MAClBE,OAAO,EAAC;QACN,eAAe,EAAC;;KAEnB,CACF;EACH;EAEAC,cAAcA,CAACR,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACc,MAAM,CACrB,GAAGjB,WAAW,CAACM,UAAU,mBAAmBE,EAAE,EAAE,CACjD;EACH;EAAC,QAAAU,CAAA,G;qBAzCUjB,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAftB,eAAe;IAAAuB,OAAA,EAAfvB,eAAe,CAAAwB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}