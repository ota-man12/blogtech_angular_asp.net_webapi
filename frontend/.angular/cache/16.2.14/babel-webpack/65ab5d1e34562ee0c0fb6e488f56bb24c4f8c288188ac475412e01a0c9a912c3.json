{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    const authRequest = request.clone({\n      set\n    });\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["AuthInterceptor","constructor","intercept","request","next","authRequest","clone","set","_","_2","factory","ɵfac"],"sources":["/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/core/interceptors/auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const authRequest = request.clone({\n      set\n    })\n  }\n}\n"],"mappings":";AAUA,OAAM,MAAOA,eAAe;EAE1BC,YAAA,GAAe;EAEfC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,MAAMC,WAAW,GAAGF,OAAO,CAACG,KAAK,CAAC;MAChCC;KACD,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBARUR,eAAe;EAAA;EAAA,QAAAS,EAAA,G;WAAfT,eAAe;IAAAU,OAAA,EAAfV,eAAe,CAAAW;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}