{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BlogPostService {\n  constructor(http) {\n    this.http = http;\n  }\n  createBlogPost(data) {\n    return this.http.post(`${environment.apiBaseUrl}/api/blogpost`, data);\n  }\n  getAllBlogPosts() {\n    return this.http.get(`${environment.apiBaseUrl}/api/blogpost`);\n  }\n  getBlogPostById(id) {}\n  static #_ = this.ɵfac = function BlogPostService_Factory(t) {\n    return new (t || BlogPostService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlogPostService,\n    factory: BlogPostService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","BlogPostService","constructor","http","createBlogPost","data","post","apiBaseUrl","getAllBlogPosts","get","getBlogPostById","id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/features/blog-post/services/blog-post.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AddBlogPost } from '../models/add-blog-post.model';\nimport { Observable } from 'rxjs';\nimport { BlogPost } from '../models/blog-post.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BlogPostService {\n  constructor(private http: HttpClient) {}\n\n  createBlogPost(data: AddBlogPost): Observable<BlogPost> {\n    return this.http.post<BlogPost>(\n      `${environment.apiBaseUrl}/api/blogpost`,\n      data\n    );\n  }\n\n  getAllBlogPosts(): Observable<BlogPost[]> {\n    return this.http.get<BlogPost[]>(`${environment.apiBaseUrl}/api/blogpost`);\n  }\n\n  getBlogPostById(id:string): Observable<BlogPost>{\n    \n  }\n}\n"],"mappings":"AAKA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,cAAcA,CAACC,IAAiB;IAC9B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CACnB,GAAGN,WAAW,CAACO,UAAU,eAAe,EACxCF,IAAI,CACL;EACH;EAEAG,eAAeA,CAAA;IACb,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAa,GAAGT,WAAW,CAACO,UAAU,eAAe,CAAC;EAC5E;EAEAG,eAAeA,CAACC,EAAS,GAEzB;EAAC,QAAAC,CAAA,G;qBAhBUX,eAAe,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfhB,eAAe;IAAAiB,OAAA,EAAfjB,eAAe,CAAAkB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}