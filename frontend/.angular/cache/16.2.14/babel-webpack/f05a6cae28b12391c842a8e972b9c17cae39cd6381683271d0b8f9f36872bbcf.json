{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.$user = new BehaviorSubject();\n  }\n  login(request) {\n    return this.http.post(`${environment.apiBaseUrl}/api/auth/login`, {\n      email: request.email,\n      password: request.password\n    });\n  }\n  setUser(user) {\n    localStorage.setItem('user-email', user.email);\n    localStorage.setItem('user-roles', user.roles.join(','));\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","environment","AuthService","constructor","http","$user","login","request","post","apiBaseUrl","email","password","setUser","user","localStorage","setItem","roles","join","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/features/auth/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { LoginRequest } from '../models/login-request.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { LoginResponse } from '../models/login-response.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  $user=new BehaviorSubject<User>\n  constructor(private http: HttpClient) {}\n\n  login(request: LoginRequest): Observable<LoginResponse> {\n    return this.http.post<LoginResponse>(\n      `${environment.apiBaseUrl}/api/auth/login`,\n      {\n        email: request.email,\n        password: request.password,\n      }\n    );\n  }\n\n  setUser(user: User): void {\n    localStorage.setItem('user-email', user.email);\n    localStorage.setItem('user-roles', user.roles.join(','));\n  }\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;AAGlD,SAASC,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,KAAK,GAAC,IAAIL,eAAqB,CAArB,CAAqB;EACQ;EAEvCM,KAAKA,CAACC,OAAqB;IACzB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CACnB,GAAGP,WAAW,CAACQ,UAAU,iBAAiB,EAC1C;MACEC,KAAK,EAAEH,OAAO,CAACG,KAAK;MACpBC,QAAQ,EAAEJ,OAAO,CAACI;KACnB,CACF;EACH;EAEAC,OAAOA,CAACC,IAAU;IAChBC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,IAAI,CAACH,KAAK,CAAC;IAC9CI,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,IAAI,CAACG,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC1D;EAAC,QAAAC,CAAA,G;qBAjBUhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}