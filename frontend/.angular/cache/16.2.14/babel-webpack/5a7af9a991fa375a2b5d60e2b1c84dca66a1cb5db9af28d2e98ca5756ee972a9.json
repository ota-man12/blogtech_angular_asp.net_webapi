{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(http) {\n    this.http = http;\n  }\n  /* Method */\n  addCategory(model) {\n    return this.http.post(`https://localhost:7002/api/Categories`, model);\n  }\n  getAllCategories() {\n    return this.http.get();\n  }\n  static #_ = this.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CategoryService","constructor","http","addCategory","model","post","getAllCategories","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/features/category/services/category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AddCategoryRequest } from '../models/add-category-request.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Category } from '../models/category.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  constructor(private http: HttpClient) {}\n\n  /* Method */\n  addCategory(model: AddCategoryRequest): Observable<void> {\n    return this.http.post<void>(`https://localhost:7002/api/Categories`, model);\n  }\n\n  getAllCategories():Observable<Category[]>{\n    return this.http.get<Category[]>()\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvC;EACAC,WAAWA,CAACC,KAAyB;IACnC,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAO,uCAAuC,EAAED,KAAK,CAAC;EAC7E;EAEAE,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,EAAc;EACpC;EAAC,QAAAC,CAAA,G;qBAVUR,eAAe,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfb,eAAe;IAAAc,OAAA,EAAfd,eAAe,CAAAe,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}