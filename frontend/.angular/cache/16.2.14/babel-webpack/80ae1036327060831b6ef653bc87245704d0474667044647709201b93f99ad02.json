{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nexport let CategoryService = class CategoryService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n  }\n  /* Methods */\n  getAllCategories() {\n    return this.http.get(`${environment.apiBaseUrl}/api/Categories`);\n  }\n  getCategoryById(id) {\n    return this.http.get(`${environment.apiBaseUrl}/api/Categories/${id}`);\n  }\n  addCategory(model) {\n    return this.http.post(`${environment.apiBaseUrl}/api/Categories`, model);\n  }\n  editCategory(id, editCategoryRequest) {\n    return this.http.put(`${environment.apiBaseUrl}/api/Categories/${id}`, editCategoryRequest, {\n      headers: {\n        'Authorization': ``\n      }\n    });\n  }\n  deleteCategory(id) {\n    return this.http.delete(`${environment.apiBaseUrl}/api/Categories/${id}`);\n  }\n};\nCategoryService = __decorate([Injectable({\n  providedIn: 'root'\n})], CategoryService);","map":{"version":3,"names":["Injectable","environment","CategoryService","constructor","http","cookieService","getAllCategories","get","apiBaseUrl","getCategoryById","id","addCategory","model","post","editCategory","editCategoryRequest","put","headers","deleteCategory","delete","__decorate","providedIn"],"sources":["/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/features/category/services/category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AddCategoryRequest } from '../models/add-category-request.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Category } from '../models/category.model';\nimport { environment } from 'src/environments/environment';\nimport { EditCategoryRequest } from '../models/edit-category-request.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  constructor(private http: HttpClient, private cookieService: C) {}\n\n  /* Methods */\n  getAllCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(\n      `${environment.apiBaseUrl}/api/Categories`\n    );\n  }\n\n  getCategoryById(id: string): Observable<Category> {\n    return this.http.get<Category>(\n      `${environment.apiBaseUrl}/api/Categories/${id}`\n    );\n  }\n\n  addCategory(model: AddCategoryRequest): Observable<void> {\n    return this.http.post<void>(\n      `${environment.apiBaseUrl}/api/Categories`,\n      model\n    );\n  }\n\n  editCategory(\n    id: string,\n    editCategoryRequest: EditCategoryRequest\n  ): Observable<Category> {\n    return this.http.put<Category>(\n      `${environment.apiBaseUrl}/api/Categories/${id}`,\n      editCategoryRequest,{\n        headers:{\n          'Authorization':``\n        }\n      }\n    );\n  }\n\n  deleteCategory(id: string): Observable<Category> {\n    return this.http.delete<Category>(\n      `${environment.apiBaseUrl}/api/Categories/${id}`\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAK1C,SAASC,WAAW,QAAQ,8BAA8B;AAMnD,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAC1BC,YAAoBC,IAAgB,EAAUC,aAAgB;IAA1C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,aAAa,GAAbA,aAAa;EAAM;EAEjE;EACAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAClB,GAAGN,WAAW,CAACO,UAAU,iBAAiB,CAC3C;EACH;EAEAC,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAClB,GAAGN,WAAW,CAACO,UAAU,mBAAmBE,EAAE,EAAE,CACjD;EACH;EAEAC,WAAWA,CAACC,KAAyB;IACnC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CACnB,GAAGZ,WAAW,CAACO,UAAU,iBAAiB,EAC1CI,KAAK,CACN;EACH;EAEAE,YAAYA,CACVJ,EAAU,EACVK,mBAAwC;IAExC,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAClB,GAAGf,WAAW,CAACO,UAAU,mBAAmBE,EAAE,EAAE,EAChDK,mBAAmB,EAAC;MAClBE,OAAO,EAAC;QACN,eAAe,EAAC;;KAEnB,CACF;EACH;EAEAC,cAAcA,CAACR,EAAU;IACvB,OAAO,IAAI,CAACN,IAAI,CAACe,MAAM,CACrB,GAAGlB,WAAW,CAACO,UAAU,mBAAmBE,EAAE,EAAE,CACjD;EACH;CACD;AA1CYR,eAAe,GAAAkB,UAAA,EAH3BpB,UAAU,CAAC;EACVqB,UAAU,EAAE;CACb,CAAC,C,EACWnB,eAAe,CA0C3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}