{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let EditBlogpostComponent = class EditBlogpostComponent {\n  constructor(route, blogPostService, categoryService, router) {\n    this.route = route;\n    this.blogPostService = blogPostService;\n    this.categoryService = categoryService;\n    this.router = router;\n    /* Variables */\n    this.id = null;\n    this.isImageSelectorVisible = false;\n  }\n  ngOnInit() {\n    this.categories$ = this.categoryService.getAllCategories();\n    this.routeSubscription = this.route.paramMap.subscribe({\n      next: params => {\n        this.id = params.get('id');\n        //Get BlogPost from API\n        if (this.id) {\n          this.getBlogPostSubscription = this.blogPostService.getBlogPostById(this.id).subscribe({\n            next: res => {\n              this.model = res;\n              this.selectedCategories = res.categories.map(x => x.id);\n            }\n          });\n        }\n      }\n    });\n  }\n  onFormSubmit() {\n    // Convert this model to Request Object\n    if (this.model && this.id) {\n      var editBlogPost = {\n        author: this.model.author,\n        content: this.model.content,\n        shortDescription: this.model.shortDescription,\n        featuredImageUrl: this.model.featuredImageUrl,\n        isVisible: this.model.isVisible,\n        publishedDate: this.model.publishedDate,\n        title: this.model.title,\n        urlHandle: this.model.urlHandle,\n        categories: this.selectedCategories ?? []\n      };\n      this.editBlogPostSubscription = this.blogPostService.editBlogPost(this.id, editBlogPost).subscribe({\n        next: res => {\n          this.router.navigateByUrl('/admin/blogposts');\n        }\n      });\n    }\n  }\n  onDelete() {\n    if (this.id) {\n      this.deleteBlogPostSubscription = this.blogPostService.deleteBlogPost(this.id).subscribe({\n        next: res => {\n          this.router.navigateByUrl('/admin/blogposts');\n        }\n      });\n    }\n  }\n  openImageSelector() {\n    this.isImageSelectorVisible = true;\n  }\n  ngOnDestroy() {\n    this.routeSubscription?.unsubscribe();\n    this.editBlogPostSubscription?.unsubscribe();\n    this.getBlogPostSubscription?.unsubscribe();\n    this.deleteBlogPostSubscription?.unsubscribe();\n  }\n};\nEditBlogpostComponent = __decorate([Component({\n  selector: 'app-edit-blogpost',\n  templateUrl: './edit-blogpost.component.html',\n  styleUrls: ['./edit-blogpost.component.css']\n})], EditBlogpostComponent);","map":{"version":3,"names":["Component","EditBlogpostComponent","constructor","route","blogPostService","categoryService","router","id","isImageSelectorVisible","ngOnInit","categories$","getAllCategories","routeSubscription","paramMap","subscribe","next","params","get","getBlogPostSubscription","getBlogPostById","res","model","selectedCategories","categories","map","x","onFormSubmit","editBlogPost","author","content","shortDescription","featuredImageUrl","isVisible","publishedDate","title","urlHandle","editBlogPostSubscription","navigateByUrl","onDelete","deleteBlogPostSubscription","deleteBlogPost","openImageSelector","ngOnDestroy","unsubscribe","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/features/blog-post/edit-blogpost/edit-blogpost.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { BlogPostService } from '../services/blog-post.service';\nimport { BlogPost } from '../models/blog-post.model';\nimport { CategoryService } from '../../category/services/category.service';\nimport { Category } from '../../category/models/category.model';\nimport { EditBlogPost } from '../models/edit-blog-post-model';\n\n@Component({\n  selector: 'app-edit-blogpost',\n  templateUrl: './edit-blogpost.component.html',\n  styleUrls: ['./edit-blogpost.component.css'],\n})\nexport class EditBlogpostComponent implements OnInit, OnDestroy {\n  /* Variables */\n  id: string | null = null;\n  model?: BlogPost;\n  categories$?: Observable<Category[]>;\n  selectedCategories?: string[];\n  isImageSelectorVisible : boolean = false;\n\n  /* Subscriptions */\n  routeSubscription?: Subscription;\n  editBlogPostSubscription?: Subscription;\n  getBlogPostSubscription?: Subscription;\n  deleteBlogPostSubscription?: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private blogPostService: BlogPostService,\n    private categoryService: CategoryService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.categories$ = this.categoryService.getAllCategories();\n\n    this.routeSubscription = this.route.paramMap.subscribe({\n      next: (params) => {\n        this.id = params.get('id');\n\n        //Get BlogPost from API\n        if (this.id) {\n          this.getBlogPostSubscription = this.blogPostService\n            .getBlogPostById(this.id)\n            .subscribe({\n              next: (res) => {\n                this.model = res;\n                this.selectedCategories = res.categories.map((x) => x.id);\n              },\n            });\n        }\n      },\n    });\n  }\n\n  onFormSubmit(): void {\n    // Convert this model to Request Object\n    if (this.model && this.id) {\n      var editBlogPost: EditBlogPost = {\n        author: this.model.author,\n        content: this.model.content,\n        shortDescription: this.model.shortDescription,\n        featuredImageUrl: this.model.featuredImageUrl,\n        isVisible: this.model.isVisible,\n        publishedDate: this.model.publishedDate,\n        title: this.model.title,\n        urlHandle: this.model.urlHandle,\n        categories: this.selectedCategories ?? [],\n      };\n\n      this.editBlogPostSubscription = this.blogPostService\n        .editBlogPost(this.id, editBlogPost)\n        .subscribe({\n          next: (res) => {\n            this.router.navigateByUrl('/admin/blogposts');\n          },\n        });\n    }\n  }\n\n  onDelete(): void {\n    if (this.id) {\n      this.deleteBlogPostSubscription = this.blogPostService\n        .deleteBlogPost(this.id)\n        .subscribe({\n          next: (res) => {\n            this.router.navigateByUrl('/admin/blogposts');\n          },\n        });\n    }\n  }\n\n  openImageSelector():void{\n    this.isImageSelectorVisible = true;\n  }\n\n  ngOnDestroy(): void {\n    this.routeSubscription?.unsubscribe();\n    this.editBlogPostSubscription?.unsubscribe();\n    this.getBlogPostSubscription?.unsubscribe();\n    this.deleteBlogPostSubscription?.unsubscribe();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}