{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nexport class AuthInterceptor {\n  constructor(cookieService) {\n    this.cookieService = cookieService;\n  }\n  intercept(request, next) {\n    const authRequest = request.clone({\n      setHeaders: {\n        Authorization: this.cookieService.get('Authorization')\n      }\n    });\n    return next.handle(authRequest);\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.CookieService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["AuthInterceptor","constructor","cookieService","intercept","request","next","authRequest","clone","setHeaders","Authorization","get","handle","_","i0","ɵɵinject","i1","CookieService","_2","factory","ɵfac"],"sources":["/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/core/interceptors/auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private cookieService: CookieService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    const authRequest = request.clone({\n      setHeaders: {\n        Authorization: this.cookieService.get('Authorization'),\n      },\n    });\n    return next.handle(authRequest);\n  }\n\n  pr\n}\n"],"mappings":";;AAWA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;EAAkB;EAEnDC,SAASA,CACPC,OAA6B,EAC7BC,IAAiB;IAEjB,MAAMC,WAAW,GAAGF,OAAO,CAACG,KAAK,CAAC;MAChCC,UAAU,EAAE;QACVC,aAAa,EAAE,IAAI,CAACP,aAAa,CAACQ,GAAG,CAAC,eAAe;;KAExD,CAAC;IACF,OAAOL,IAAI,CAACM,MAAM,CAACL,WAAW,CAAC;EACjC;EAAC,QAAAM,CAAA,G;qBAbUZ,eAAe,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfjB,eAAe;IAAAkB,OAAA,EAAflB,eAAe,CAAAmB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}