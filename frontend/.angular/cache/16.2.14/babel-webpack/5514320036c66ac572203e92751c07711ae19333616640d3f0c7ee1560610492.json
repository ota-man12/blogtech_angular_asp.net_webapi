{"ast":null,"code":"import { CookieService } from 'ngx-cookie-service';\nimport { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nexport const authGuard = (route, state) => {\n  const cookieService = inject(CookieService);\n  const authService = inject(AuthService);\n  // Check for JWT\n  let token = cookieService.get('Authorization');\n  if (token) {} else {\n    //Logout is token is not defined\n    authService.logout();\n    return;\n  }\n};","map":{"version":3,"names":["CookieService","inject","AuthService","authGuard","route","state","cookieService","authService","token","get","logout"],"sources":["/Users/obakengtaphane/Desktop/Projects/blogTech/UI/blogtech/src/app/features/auth/guards/auth.guard.ts"],"sourcesContent":["import { CookieService } from 'ngx-cookie-service';\nimport { CanActivateFn } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const cookieService = inject(CookieService);\n\n  const authService = inject(AuthService);\n\n  // Check for JWT\n  let token = cookieService.get('Authorization');\n\n  if (token) {\n  } else {\n    //Logout is token is not defined\n    authService.logout();\n    return\n  }\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAElD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,aAAa,GAAGL,MAAM,CAACD,aAAa,CAAC;EAE3C,MAAMO,WAAW,GAAGN,MAAM,CAACC,WAAW,CAAC;EAEvC;EACA,IAAIM,KAAK,GAAGF,aAAa,CAACG,GAAG,CAAC,eAAe,CAAC;EAE9C,IAAID,KAAK,EAAE,C,CACV,MAAM;IACL;IACAD,WAAW,CAACG,MAAM,EAAE;IACpB;;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}